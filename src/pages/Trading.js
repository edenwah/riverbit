import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useRef, useEffect } from "react";
import RiverbitLogo from "../components/RiverbitLogo";
import DesktopNav from "../components/DesktopNav";
import DesktopNavRight from "../components/DesktopNavRight";
import MobileMenu from "../components/MobileMenu";
import PrimaryButton from "../components/Button/PrimaryButton";
import Tabs from "../components/Tabs";
import PositionsTPSLModal from "../components/PositionsTPSLModal";
import ToggleButton from "../components/ToggleButton";
import PercentSlider from "../components/PercentSlider";
import Footer from "../components/Footer";
import Tips from "../components/Tips";
import MobileHeader from "../components/MobileHeader";
import ToggleWithText from "../components/ToggleWithText";
import Select from "../components/Select";
export default () => {
    const [input1, onChangeInput1] = useState('');
    const [input2, onChangeInput2] = useState('');
    const [input3, onChangeInput3] = useState('');
    const [input4, onChangeInput4] = useState('');
    const [input5, onChangeInput5] = useState('');
    const [input6, onChangeInput6] = useState('');
    const [input7, onChangeInput7] = useState('');
    const [input8, onChangeInput8] = useState('');
    const [input9, onChangeInput9] = useState('');
    const [input10, onChangeInput10] = useState('');
    const [input11, onChangeInput11] = useState('Strict');
    const [inputTPSLPrice, setInputTPSLPrice] = useState('');
    const [inputTPSLPercent, setInputTPSLPercent] = useState('');
    const [isOn, setIsOn] = useState(false);
    const [reduceOnly, setReduceOnly] = useState(false);
    const [orderPanelTab, setOrderPanelTab] = useState("Market");
    const [orderBookTab, setOrderBookTab] = useState("Order Book");
    const [accountTab, setAccountTab] = useState("Balance");
    const [searchFilterTab, setSearchFilterTab] = useState("All Coins");
    const [granularity, setGranularity] = useState("");
    const [indicator, setIndicator] = useState("");
    const [filterValue, setFilterValue] = useState("");
    const [tif, setTif] = useState("GTC");
    const [showTifTooltip, setShowTifTooltip] = useState(false);
    const [leverage, setLeverage] = useState("20x"); // Add this state
    const [crossSelected, setCrossSelected] = useState(false);
    const [aiSelected, setAiSelected] = useState(false);
    const [showAssetPopup, setShowAssetPopup] = useState(false);
    { /* Show and Hide TP/SL modal */ }
    const [showTPSLModal, setShowTPSLModal] = useState(false); // 控制 modal 顯示
    const [modalData, setModalData] = useState(null); // 儲存傳遞給 modal 的資料
    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
    const [language, setLanguage] = useState("EN");
    const [showLangDropdown, setShowLangDropdown] = useState(false);
    const [showWalletDropdown, setShowWalletDropdown] = useState(false);
    const [showMoreDropdown, setShowMoreDropdown] = useState(false);
    const walletDropdownRef = useRef(null);
    const langDropdownRef = useRef(null);
    const moreDropdownRef = useRef(null);
    const assetPopupRef = useRef(null);
    { /* Close dropdowns when clicking outside */ }
    useEffect(() => {
        function handleClickOutside(event) {
            if (moreDropdownRef.current &&
                !moreDropdownRef.current.contains(event.target)) {
                setShowMoreDropdown(false);
            }
            if (walletDropdownRef.current &&
                !walletDropdownRef.current.contains(event.target)) {
                setShowWalletDropdown(false);
            }
            if (langDropdownRef.current &&
                !langDropdownRef.current.contains(event.target)) {
                setShowLangDropdown(false);
            }
        }
        if (showMoreDropdown || showWalletDropdown || showLangDropdown) {
            document.addEventListener("mousedown", handleClickOutside);
        }
        return () => {
            document.removeEventListener("mousedown", handleClickOutside);
        };
    }, [showMoreDropdown, showWalletDropdown, showLangDropdown]);
    { /* Close asset popup when clicking outside or pressing ESC */ }
    useEffect(() => {
        function handleClickOrEsc(event) {
            // Click outside
            if (showAssetPopup &&
                assetPopupRef.current &&
                event instanceof MouseEvent &&
                !assetPopupRef.current.contains(event.target)) {
                setShowAssetPopup(false);
            }
            // ESC key
            if (showAssetPopup &&
                event instanceof KeyboardEvent &&
                event.key === "Escape") {
                setShowAssetPopup(false);
            }
        }
        if (showAssetPopup) {
            document.addEventListener("mousedown", handleClickOrEsc);
            document.addEventListener("keydown", handleClickOrEsc);
        }
        return () => {
            document.removeEventListener("mousedown", handleClickOrEsc);
            document.removeEventListener("keydown", handleClickOrEsc);
        };
    }, [showAssetPopup]);
    // Assume a total amount for percent calculation
    const AMOUNT_TOTAL = 1000;
    // Calculate percent from input2 (amount)
    const percentValue = input2
        ? Math.max(0, Math.min(100, Math.round((Number(input2) / AMOUNT_TOTAL) * 100)))
        : 0;
    const allMarkets = [
        { symbol: "BTC-USD", name: "Bitcoin", bg: "bg-orange-500", leverage: "40x", price: "$113,479", change: "+2,530 / +2.28%", funding: "0.0100%", volume: "$3,294,291,814", oi: "$3,989,216,288", type: "Perps" },
        { symbol: "ETH-USD", name: "Ethereum", bg: "bg-blue-500", leverage: "25x", price: "$4,350.7", change: "+66.3 / +1.55%", funding: "0.0100%", volume: "$2,603,760,484", oi: "$2,911,409,736", type: "Perps" },
        { symbol: "SOL-USD", name: "Solana", bg: "bg-purple-500", leverage: "20x", price: "$221.94", change: "+7.47 / +3.48%", funding: "0.0100%", volume: "$1,314,153,194", oi: "$1,516,333,384", type: "Perps" },
        { symbol: "HYPE-USD", name: "Hyperliquid", bg: "bg-pink-500", leverage: "10x", price: "$54.531", change: "+1.625 / +3.07%", funding: "0.0100%", volume: "$709,614,355", oi: "$1,487,051,890", type: "Perps" },
        { symbol: "HYPE/USDC", name: "SPOT", bg: "bg-pink-500", leverage: "-", price: "$54.511", change: "+1.593 / +3.01%", funding: "-", volume: "$250,910,508", oi: "-", type: "Spot" }
    ];
    const filteredMarkets = searchFilterTab === "All Coins"
        ? allMarkets
        : allMarkets.filter(m => {
            if (searchFilterTab === "Perps")
                return m.type === "Perps";
            if (searchFilterTab === "Spot")
                return m.type === "Spot";
            return false;
        });
    return (_jsx("div", { className: "flex flex-col bg-black", children: _jsxs("div", { className: "self-stretch ", children: [_jsxs("div", { className: "hidden xl:flex justify-between items-start self-stretch bg-zinc-900 py-3.5 px-4", children: [_jsxs("div", { className: "flex shrink-0 items-start gap-8", children: [_jsx(RiverbitLogo, {}), _jsx(DesktopNav, {})] }), _jsx(DesktopNavRight, { balance: "$27,345.12", points: "1,250,000", language: language, setLanguage: setLanguage })] }), _jsx(MobileHeader, { balance: "$27,345.12", onDeposit: () => alert("Deposit pressed!"), onMenuToggle: () => setMobileMenuOpen(!mobileMenuOpen) }), mobileMenuOpen && (_jsx(MobileMenu, { isOpen: mobileMenuOpen, onClose: () => setMobileMenuOpen(false), balance: "$27,345.12", points: "1,250,000", language: language, setLanguage: setLanguage })), _jsxs("div", { className: "grid grid-cols-1 xl:grid-cols-5 items-start self-stretch p-2 gap-2", children: [_jsxs("div", { className: "md:col-span-3 flex flex-col gap-2 w-full", children: [_jsxs("div", { className: "flex flex-col self-stretch bg-zinc-900 py-4 gap-3 rounded-lg border border-solid border-[#30363D]", children: [_jsxs("div", { className: "flex flex-col md:flex-row md:items-center self-stretch mx-3 gap-2", children: [_jsxs("div", { className: "flex w-full items-center gap-2 mb-1 md:mb-0 md:mr-7", children: [_jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/11z6u7t1_expires_30_days.png", className: "w-3 h-7 object-fill" }), _jsx("span", { className: "text-gray-200 text-lg font-bold", children: "ETH-PERP" }), _jsxs("div", { className: "relative", children: [_jsxs("button", { type: "button", className: "flex items-center gap-1 ml-4 px-3 py-2 bg-zinc-900 rounded-sm  text-zinc-400 text-sm font-bold focus:outline-none", onClick: () => setShowAssetPopup((v) => !v), children: [_jsx("span", { children: "Select Asset" }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/rnvmw36i_expires_30_days.png", className: "w-3 h-[15px] rounded-sm object-fill", alt: "Select Asset" })] }), showAssetPopup && (_jsxs("div", { className: "fixed inset-0 z-50 flex items-start md:mt-40 md:ml-4", children: [_jsx("div", { className: "absolute inset-0 bg-black/50 md:bg-transparent" }), _jsxs("div", { ref: assetPopupRef, className: "relative w-full max-w-[910px] bg-[#272B2F] overflow-auto flex flex-col\n                                                        md:rounded-lg md:border md:border-[#30363D] md:ml-0 md:mr-0\n                                                        h-[100vh] md:h-auto\n                                                        mt-auto md:mt-0\n                                                        rounded-t-lg", children: [_jsx("div", { className: "md:hidden w-full flex justify-end p-4", children: _jsx("button", { className: "text-white text-lg font-bold", onClick: () => setShowAssetPopup(false), children: "\u2715" }) }), _jsxs("div", { className: "flex items-center justify-between w-full px-4 py-6 gap-2 border-b border-[#374151]", children: [_jsxs("div", { className: "flex items-center flex-1 bg-[#0D1117] py-3 px-2 rounded-sm border border-[#30363D]", children: [_jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/alyycaw7_expires_30_days.png", className: "w-4 h-6 mx-4 object-fill" }), _jsx("input", { placeholder: "Search", value: input10, onChange: (event) => onChangeInput10(event.target.value), className: "w-full flex-1 text-[#ADAEBC] text-base border-0" })] }), _jsx(ToggleWithText, { options: ["Strict", "All"], value: input11, onChange: onChangeInput11 })] }), _jsx("div", { className: "overflow-auto flex whitespace-nowrap gap-x-4 gap-y-2 px-4 py-2 mb-2 text-sm", children: ["All Coins", "Perps", "Spot", "Trending", "DEX Only", "Pre-launch", "AI", "DeFi", "Layer 1", "Layer 2", "Meme"].map(tab => (_jsx("button", { className: `my-1 px-3 py-1 rounded transition ${searchFilterTab === tab
                                                                                            ? "bg-fuchsia-800 text-white font-bold"
                                                                                            : "bg-transparent text-zinc-400"}`, onClick: () => setSearchFilterTab(tab), type: "button", children: tab }, tab))) }), _jsx("div", { className: "w-full overflow-auto text-left", children: _jsxs("table", { className: "min-w-[700px] w-full text-sm", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 font-bold border-b border-[#30363D]", children: [_jsx("th", { className: "px-4 py-3 text-left", children: "Symbol" }), _jsx("th", { className: "px-4 py-3 text-left", children: "Leverage" }), _jsx("th", { className: "px-4 py-3 text-left", children: "Last Price" }), _jsx("th", { className: "px-4 py-3 text-left", children: "24h Change" }), _jsx("th", { className: "px-4 py-3 text-left", children: "8h Funding" }), _jsx("th", { className: "px-4 py-3 text-left", children: "24h Volume" }), _jsx("th", { className: "px-4 py-3 text-left", children: "Open Interest" })] }) }), _jsx("tbody", { children: filteredMarkets.map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D] text-white", children: [_jsx("td", { className: "px-4 py-2", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("button", { className: `${row.bg} text-white py-2 px-3 rounded-full border-0`, children: row.symbol.charAt(0) }), _jsxs("div", { className: "flex flex-col", children: [_jsx("span", { className: "font-bold", children: row.symbol }), _jsx("span", { className: "text-gray-400 text-sm", children: row.name })] })] }) }), _jsx("td", { className: "px-4 py-2", children: row.leverage }), _jsx("td", { className: "px-4 py-2 font-bold", children: row.price }), _jsx("td", { className: "px-4 py-2 text-[#2DA44E]", children: row.change }), _jsx("td", { className: "px-4 py-2", children: row.funding }), _jsx("td", { className: "px-4 py-2", children: row.volume }), _jsx("td", { className: "px-4 py-2", children: row.oi })] }, idx))) })] }) }), _jsxs("div", { className: "flex items-center justify-between px-4 py-2 text-sm text-zinc-400 mt-4", children: [_jsx("span", { children: "Showing 5 of 247 markets" }), _jsxs("span", { className: "max-md:hidden", children: ["Press ", _jsx("button", { className: "px-2 py-1 bg-gray-600 rounded text-sm", children: "ESC" }), " to close"] })] })] })] }))] })] }), _jsxs("div", { className: "flex gap-2  md:ml-auto", children: [_jsx(Select, { value: granularity, onChange: setGranularity, placeholder: "Granularity", options: [
                                                                { label: "1m", value: "1m" },
                                                                { label: "5m", value: "5m" },
                                                                { label: "15m", value: "15m" },
                                                                { label: "1h", value: "1h" },
                                                                { label: "1d", value: "1d" },
                                                            ], minWidth: "min-w-32" }), _jsx(Select, { value: indicator, onChange: setIndicator, placeholder: "Indicator", options: [
                                                                { label: "None", value: "None" },
                                                                { label: "EMA", value: "EMA" },
                                                                { label: "SMA", value: "SMA" },
                                                                { label: "RSI", value: "RSI" },
                                                                { label: "MACD", value: "MACD" },
                                                            ], minWidth: "min-w-32" })] })] }), _jsxs("div", { className: "flex flex-wrap items-start self-stretch mx-3 gap-3 text-left", children: [_jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "Mark Price" }), _jsx("span", { className: "text-gray-200 text-sm font-bold  ", children: "227.34" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "Index Price" }), _jsx("span", { className: "text-gray-200 text-sm font-bold ", children: "227.30" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "24h Change" }), _jsx("span", { className: "text-[#F85149] text-sm font-bold  ", children: "-0.97%" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "24h Volume" }), _jsx("span", { className: "text-gray-200 text-sm font-bold  ", children: "3.2B" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "Open Interest" }), _jsx("span", { className: "text-gray-200 text-sm font-bold ", children: "3.5B" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "Funding Rate" }), _jsx("span", { className: "text-[#2DA44E] text-sm font-bold ", children: "0.1300%" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-24", children: [_jsx("span", { className: "text-zinc-400 text-sm ", children: "Next Settlement" }), _jsx("span", { className: "text-gray-200 text-sm font-bold ", children: "00:52:54" })] })] })] }), _jsx("div", { className: "self-stretch bg-zinc-900 h-[500px] p-[1px] rounded-sm border border-solid border-[#30363D]" }), _jsxs("div", { className: "self-stretch bg-zinc-900 py-[1px] rounded-sm border border-solid border-[#30363D]", children: [_jsxs("div", { className: "flex flex-col items-start self-stretch py-4 mx-[1px] gap-2", children: [_jsx("span", { className: "text-white text-lg ml-3", children: "Account Overview" }), _jsxs("div", { className: "flex flex-wrap justify-between items-start self-stretch mx-3 text-left gap-3", children: [_jsxs("div", { className: "flex flex-1 flex-col items-start min-w-32", children: [_jsx("span", { className: "text-zinc-400 text-sm", children: "Total Account Value" }), _jsx("span", { className: "text-white text-base", children: "$42,845.67" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-32", children: [_jsx("span", { className: "text-zinc-400 text-sm", children: "Total Margin Used" }), _jsx("span", { className: "text-white text-base", children: "$5,525.00" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-32", children: [_jsx("span", { className: "text-zinc-400 text-sm", children: "Total Notional Position" }), _jsx("span", { className: "text-white text-base", children: "$37,000.00" })] }), _jsxs("div", { className: "flex flex-1 flex-col items-start min-w-32", children: [_jsx("span", { className: "text-zinc-400 text-sm", children: "Withdrawable Amount" }), _jsx("span", { className: "text-white text-base", children: "$37,320.67" })] })] })] }), _jsxs("div", { className: "flex flex-col w-full p-4", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("div", { className: "flex gap-4 justify-between items-center border-b border-[#30363D] min-w-[600px] flex-nowrap", children: [_jsx(Tabs, { tabs: [
                                                                    "Balance",
                                                                    "Positions",
                                                                    "Open Orders",
                                                                    "Trade History",
                                                                    "Funding History",
                                                                    "Order History",
                                                                ], activeTab: accountTab, onTabChange: setAccountTab }), _jsx("div", { className: "relative", children: _jsx(Select, { value: filterValue, onChange: setFilterValue, placeholder: "Filter", options: [
                                                                        { label: "All", value: "All" },
                                                                        { label: "Active", value: "Active" },
                                                                        { label: "Long", value: "Long" },
                                                                        { label: "Short", value: "Short" },
                                                                    ], minWidth: "min-w-32" }) })] }) }), accountTab === "Balance" && (_jsxs("div", { className: "overflow-x-auto py-4 text-left", children: [_jsxs("div", { className: "flex text-sm text-zinc-400 font-bold mb-2 min-w-[400px] gap-2 py-2", children: [_jsx("span", { className: "flex-1", children: "Currency" }), _jsx("span", { className: "flex-1", children: "Available" }), _jsx("span", { className: "flex-1", children: "In Orders" }), _jsx("span", { className: "flex-1", children: "Value($)" })] }), _jsx("div", { className: "flex flex-col gap-2 text-sm text-white min-w-[400px]", children: [
                                                                { currency: "USDC", available: "12,345.67", inOrders: "1,000.00", value: "$13,345.67" },
                                                                { currency: "Points", available: "1,250,000", inOrders: "0", value: "Points" },
                                                            ].map((row, idx) => (_jsxs("div", { className: "flex", children: [_jsx("span", { className: "flex-1", children: row.currency }), _jsx("span", { className: "flex-1", children: row.available }), _jsx("span", { className: "flex-1", children: row.inOrders }), _jsx("span", { className: "flex-1", children: row.value })] }, idx))) })] })), accountTab === "Positions" && (_jsxs("div", { className: "py-4", children: [_jsxs("div", { className: "overflow-x-auto", children: [_jsxs("table", { className: "w-full text-left border-collapse", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 text-sm font-bold gap-2", children: [_jsx("th", { className: "py-2 px-2", children: "Coin" }), _jsx("th", { className: "py-2 px-2", children: "Position" }), _jsx("th", { className: "py-2 px-2", children: "Funding Rate" }), _jsx("th", { className: "py-2 px-2", children: "PNL (ROE%)" }), _jsx("th", { className: "py-2 px-2", children: "Liq. Price" }), _jsx("th", { className: "py-2 px-2", children: "Margin" }), _jsx("th", { className: "py-2 px-2", children: "TP/SL" }), _jsx("th", { className: "py-2 px-2", children: "Actions" })] }) }), _jsx("tbody", { className: "text-white text-sm", children: [
                                                                                {
                                                                                    coin: "xAAPL",
                                                                                    tags: ["8x", "Cross"],
                                                                                    extra: "$12.50/day",
                                                                                    position: { value: "$25,000 @227.10", side: "Long" },
                                                                                    fundingRate: "+0.0100%",
                                                                                    pnl: { value: "+$98.00", roe: "+3.92%" },
                                                                                    liqPrice: "198.20",
                                                                                    margin: { value: "$3,125", percent: "42%" },
                                                                                    tpSl: "--/--",
                                                                                    action: "Close",
                                                                                },
                                                                            ].map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D] gap-2 py-2", children: [_jsx("td", { children: _jsxs("div", { className: "flex flex-col items-start", children: [_jsx("span", { children: row.coin }), _jsx("div", { className: "flex gap-1 mt-1", children: row.tags.map((tag, i) => (_jsx("div", { className: "inline-flex bg-[#30363D] py-1 px-2 rounded text-zinc-400 text-[10px] font-bold", children: tag }, i))) }), _jsx("div", { className: "inline-flex bg-[#30363D] py-1 px-2 rounded text-zinc-400 text-[10px] font-bold mt-1", children: row.extra })] }) }), _jsx("td", { className: "py-2 px-2", children: _jsxs("div", { className: "flex flex-col gap-1 items-start", children: [_jsx("span", { children: row.position.value }), _jsx("div", { className: "inline-flex bg-[#30363D] py-1 px-2 rounded text-zinc-400 text-[10px] font-bold", children: row.position.side })] }) }), _jsx("td", { className: "py-2 px-2", children: row.fundingRate }), _jsx("td", { className: "py-2 px-2", children: _jsxs("div", { className: "flex flex-col gap-1", children: [_jsx("span", { children: row.pnl.value }), _jsx("div", { className: "inline-flex bg-[#22C55E1A] py-1 px-2 rounded text-[#2DA44E] text-[10px] font-bold", children: row.pnl.roe })] }) }), _jsx("td", { className: "py-2 px-2", children: row.liqPrice }), _jsx("td", { className: "py-2 px-2", children: _jsxs("div", { className: "flex flex-col gap-1 items-start", children: [_jsx("span", { children: row.margin.value }), _jsx("div", { className: "inline-flex bg-[#30363D] py-1 px-2 rounded text-zinc-400 text-[10px] font-bold", children: row.margin.percent })] }) }), _jsx("td", { className: "py-2 px-2", children: _jsxs("div", { className: "flex gap-1 items-center", children: [_jsx("span", { children: row.tpSl }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/l0hc3xdh_expires_30_days.png", className: "w-4 h-4 object-fill cursor-pointer", onClick: () => {
                                                                                                        setModalData({
                                                                                                            time: "9/12/2025 17:30:13",
                                                                                                            coin: row.coin,
                                                                                                            position: row.position.value,
                                                                                                            entryPrice: "55.116",
                                                                                                            markPrice: "55.252",
                                                                                                            takeProfit: "Price above 60",
                                                                                                            stopLoss: "--",
                                                                                                            orderId: "160687782672",
                                                                                                            expectedProfit: "39.51 USDC",
                                                                                                        });
                                                                                                        setShowTPSLModal(true);
                                                                                                    }, alt: "TP/SL" })] }) }), _jsx("td", { className: "py-2 px-2 text-fuchsia-800 font-bold", children: row.action })] }, idx))) })] }), showTPSLModal && modalData && (_jsx("div", { className: "w-full fixed inset-0 z-50 flex items-center justify-center bg-black/60", children: _jsx("div", { className: "relative w-full h-full md:w-[500px] md:h-auto md:rounded-xl flex flex-col justify-center", style: { maxWidth: "100vw", maxHeight: "100vh" }, children: _jsx(PositionsTPSLModal, { data: modalData, inputTPSLPrice: inputTPSLPrice, onChangeInputTPSLPrice: setInputTPSLPrice, inputTPSLPercent: inputTPSLPercent, onChangeInputTPSLPercent: setInputTPSLPercent, onClose: () => setShowTPSLModal(false), onConfirm: () => {
                                                                                console.log("Confirmed", inputTPSLPrice, inputTPSLPercent);
                                                                                setShowTPSLModal(false);
                                                                            } }) }) }))] }), _jsx("div", { className: "flex justify-end mt-3", children: _jsx("button", { className: "bg-fuchsia-800 w-[100px] py-3.5 rounded-md text-white font-bold", children: "Close All" }) })] })), accountTab === "Open Orders" && (_jsxs("div", { children: [_jsx("div", { className: "overflow-x-auto py-4", children: _jsxs("table", { className: "w-full text-left border-collapse", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 text-sm font-bold", children: [_jsx("th", { className: "py-2 px-2", children: "Time" }), _jsx("th", { className: "py-2 px-2", children: "Type" }), _jsx("th", { className: "py-2 px-2", children: "Coin" }), _jsx("th", { className: "py-2 px-2", children: "Direction" }), _jsx("th", { className: "py-2 px-2", children: "Size / Original Size" }), _jsx("th", { className: "py-2 px-2", children: "Order Value" }), _jsx("th", { className: "py-2 px-2", children: "Price / Trigger" }), _jsx("th", { className: "py-2 px-2", children: "Reduce Only" }), _jsx("th", { className: "py-2 px-2", children: "TP/SL" }), _jsx("th", { className: "py-2 px-2", children: "Actions" })] }) }), _jsx("tbody", { className: "text-sm text-white", children: [
                                                                            {
                                                                                time: "9/12/2025 17:30:13",
                                                                                type: "Take Profit Market",
                                                                                coin: "HYPE",
                                                                                direction: { text: "Close Long", color: "text-[#F85149]" },
                                                                                size: "-- / --",
                                                                                orderValue: "--",
                                                                                price: "Market / Price > 60",
                                                                                reduceOnly: "Yes",
                                                                                tpSl: "--",
                                                                                action: { text: "Cancel", color: "text-fuchsia-800" },
                                                                            },
                                                                        ].map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D]", children: [_jsx("td", { className: "py-2 px-2 whitespace-pre", children: row.time }), _jsx("td", { className: "py-2 px-2", children: row.type }), _jsx("td", { className: "py-2 px-2", children: row.coin }), _jsx("td", { className: `py-2 px-2 ${row.direction.color}`, children: row.direction.text }), _jsx("td", { className: "py-2 px-2", children: row.size }), _jsx("td", { className: "py-2 px-2", children: row.orderValue }), _jsx("td", { className: "py-2 px-2", children: row.price }), _jsx("td", { className: "py-2 px-2", children: row.reduceOnly }), _jsx("td", { className: "py-2 px-2", children: row.tpSl }), _jsx("td", { className: `py-2 px-2 font-bold ${row.action.color}`, children: row.action.text })] }, idx))) })] }) }), _jsx("div", { className: "flex justify-end mt-3", children: _jsx("button", { className: "bg-fuchsia-800 w-[100px] py-3.5 rounded-md text-white font-bold", children: "View All" }) })] })), accountTab === "Trade History" && (_jsxs("div", { className: "py-4", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-left border-collapse", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 text-sm font-bold", children: [_jsx("th", { className: "py-2 px-2", children: "Time" }), _jsx("th", { className: "py-2 px-2", children: "Coin" }), _jsx("th", { className: "py-2 px-2", children: "Direction" }), _jsx("th", { className: "py-2 px-2", children: "Price" }), _jsx("th", { className: "py-2 px-2", children: "Size" }), _jsx("th", { className: "py-2 px-2", children: "Trade Value" }), _jsx("th", { className: "py-2 px-2", children: "Fee" }), _jsx("th", { className: "py-2 px-2", children: "Closed PNL" })] }) }), _jsx("tbody", { className: "text-sm text-white", children: [
                                                                            {
                                                                                time: "9/12/2025 16:41:34",
                                                                                coin: "HYPE",
                                                                                direction: { text: "Open Long", color: "text-[#2DA44E]" },
                                                                                price: "55.116",
                                                                                size: "8.09 HYPE",
                                                                                tradeValue: "445.89 USDC",
                                                                                fee: "0.20 USDC",
                                                                                pnl: "-0.20 USDC",
                                                                            },
                                                                        ].map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D]", children: [_jsx("td", { className: "py-2 px-2 whitespace-pre", children: row.time }), _jsx("td", { className: "py-2 px-2", children: row.coin }), _jsx("td", { className: `py-2 px-2 ${row.direction.color}`, children: row.direction.text }), _jsx("td", { className: "py-2 px-2", children: row.price }), _jsx("td", { className: "py-2 px-2", children: row.size }), _jsx("td", { className: "py-2 px-2", children: row.tradeValue }), _jsx("td", { className: "py-2 px-2", children: row.fee }), _jsx("td", { className: "py-2 px-2", children: row.pnl })] }, idx))) })] }) }), _jsxs("div", { className: "flex justify-end mt-3 gap-4", children: [_jsx("button", { className: "bg-fuchsia-800 py-3.5 px-[19px] rounded-md text-white font-bold", onClick: () => alert("Pressed!"), children: "View All" }), _jsx("button", { className: "bg-fuchsia-800 py-3.5 px-4 rounded-md text-white font-bold", onClick: () => alert("Pressed!"), children: "Export as CSV" })] })] })), accountTab === "Funding History" && (_jsxs("div", { className: "py-4", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-left border-collapse", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 text-sm font-bold", children: [_jsx("th", { className: "py-2 px-2", children: "Time" }), _jsx("th", { className: "py-2 px-2", children: "Coin" }), _jsx("th", { className: "py-2 px-2", children: "Size" }), _jsx("th", { className: "py-2 px-2", children: "Position Side" }), _jsx("th", { className: "py-2 px-2", children: "Payment" }), _jsx("th", { className: "py-2 px-2", children: "Rate" })] }) }), _jsx("tbody", { className: "text-sm text-white", children: [
                                                                            {
                                                                                time: "9/12/2025 17:00:00",
                                                                                coin: "HYPE",
                                                                                size: "8.09 HYPE",
                                                                                side: { text: "Long", color: "text-[#2DA44E]" },
                                                                                payment: { text: "$0.0012", color: "text-[#2DA44E]" },
                                                                                rate: "-0.0003%",
                                                                            },
                                                                        ].map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D]", children: [_jsx("td", { className: "py-2 px-2 whitespace-pre", children: row.time }), _jsx("td", { className: "py-2 px-2", children: row.coin }), _jsx("td", { className: "py-2 px-2", children: row.size }), _jsx("td", { className: `py-2 px-2 ${row.side.color}`, children: row.side.text }), _jsx("td", { className: `py-2 px-2 ${row.payment.color}`, children: row.payment.text }), _jsx("td", { className: "py-2 px-2", children: row.rate })] }, idx))) })] }) }), _jsxs("div", { className: "flex justify-end mt-3 gap-4", children: [_jsx("button", { className: "bg-fuchsia-800 py-3.5 px-[19px] rounded-md text-white font-bold", onClick: () => alert("Pressed!"), children: "View All" }), _jsx("button", { className: "bg-fuchsia-800 py-3.5 px-4 rounded-md text-white font-bold", onClick: () => alert("Pressed!"), children: "Export as CSV" })] })] })), accountTab === "Order History" && (_jsxs("div", { className: "py-4", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-left border-collapse", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-zinc-400 text-sm font-bold", children: [_jsx("th", { className: "py-2 px-2", children: "Time" }), _jsx("th", { className: "py-2 px-2", children: "Type" }), _jsx("th", { className: "py-2 px-2", children: "Coin" }), _jsx("th", { className: "py-2 px-2", children: "Direction" }), _jsx("th", { className: "py-2 px-2", children: "Size / Filled Size" }), _jsx("th", { className: "py-2 px-2", children: "Order Value" }), _jsx("th", { className: "py-2 px-2", children: "Price / Trigger" }), _jsx("th", { className: "py-2 px-2", children: "Reduce Only" }), _jsx("th", { className: "py-2 px-2", children: "TP/SL" }), _jsx("th", { className: "py-2 px-2", children: "Status" }), _jsx("th", { className: "py-2 px-2", children: "Order ID" })] }) }), _jsx("tbody", { className: "text-sm text-white", children: [
                                                                            {
                                                                                time: "9/12/2025 17:30:13",
                                                                                type: "Take Profit Market",
                                                                                coin: "HYPE",
                                                                                direction: { text: "Close Long", color: "text-[#F85149]" },
                                                                                size: "-- / --",
                                                                                orderValue: "--",
                                                                                trigger: "Market /Price > 60",
                                                                                reduceOnly: "Yes",
                                                                                tpSl: "--",
                                                                                status: "Open",
                                                                                orderId: "160687782672",
                                                                            },
                                                                            {
                                                                                time: "9/12/2025 17:03:27",
                                                                                type: "Take Profit Market",
                                                                                coin: "HYPE",
                                                                                direction: { text: "Close Long", color: "text-[#F85149]" },
                                                                                size: "-- / --",
                                                                                orderValue: "--",
                                                                                trigger: "Market /Price > 56",
                                                                                reduceOnly: "Yes",
                                                                                tpSl: "--",
                                                                                status: "Cancelled",
                                                                                orderId: "160656988197",
                                                                            },
                                                                        ].map((row, idx) => (_jsxs("tr", { className: "border-b border-[#30363D]", children: [_jsx("td", { className: "py-2 px-2 whitespace-pre", children: row.time }), _jsx("td", { className: "py-2 px-2", children: row.type }), _jsx("td", { className: "py-2 px-2", children: row.coin }), _jsx("td", { className: `py-2 px-2 ${row.direction.color}`, children: row.direction.text }), _jsx("td", { className: "py-2 px-2", children: row.size }), _jsx("td", { className: "py-2 px-2", children: row.orderValue }), _jsx("td", { className: "py-2 px-2", children: row.trigger }), _jsx("td", { className: "py-2 px-2", children: row.reduceOnly }), _jsx("td", { className: "py-2 px-2", children: row.tpSl }), _jsx("td", { className: "py-2 px-2", children: row.status }), _jsx("td", { className: "py-2 px-2", children: row.orderId })] }, idx))) })] }) }), _jsx("div", { className: "flex justify-end mt-3", children: _jsx("button", { className: "bg-fuchsia-800 py-3.5 px-[19px] rounded-md text-white font-bold", onClick: () => alert("Pressed!"), children: "View All" }) })] }))] })] })] }), _jsxs("div", { className: "md:col-span-2 grid 2xl:grid-cols-2 gap-2 w-full  xl:gap-2", children: [_jsxs("div", { className: "flex flex-col gap-2 items-center bg-zinc-900 p-[1px] rounded-sm border border-solid border-[#30363D] w-full", children: [_jsx(Tabs, { tabs: ["Order Book", "Trades"], activeTab: orderBookTab, onTabChange: setOrderBookTab }), orderBookTab === "Order Book" && (_jsx("div", { className: "flex flex-col items-start w-full", children: _jsxs("div", { className: "flex flex-col items-start w-full", children: [_jsx("div", { className: "flex flex-col items-center py-1 w-full", children: _jsxs("div", { className: "flex items-start pr-[1px] w-full", children: [_jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Price" }), _jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Size" }), _jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Total" })] }) }), _jsx("div", { className: "flex flex-col w-full", children: [
                                                            { price: "110,595.00", size: "2.376", total: "16.500", barWidth: "80%" },
                                                            { price: "110,594.00", size: "1.359", total: "15.200", barWidth: "70%" },
                                                            { price: "110,593.00", size: "0.990", total: "13.900", barWidth: "60%" },
                                                            { price: "110,592.00", size: "3.025", total: "12.600", barWidth: "50%" },
                                                            { price: "110,591.00", size: "1.146", total: "11.300", barWidth: "45%" },
                                                            { price: "110,590.00", size: "2.852", total: "10.000", barWidth: "37%" },
                                                            { price: "110,589.00", size: "2.852", total: "10.000", barWidth: "33%" },
                                                            { price: "110,588.00", size: "2.852", total: "10.000", barWidth: "25%" },
                                                            { price: "110,587.00", size: "2.852", total: "0.190", barWidth: "20%" },
                                                        ].map((row, idx) => (_jsxs("div", { className: "relative flex w-full items-center text-sm text-white", children: [_jsx("div", { className: "absolute left-0 top-0 h-full bg-[#EF44441A]", style: { width: row.barWidth } }), _jsxs("div", { className: "grid grid-cols-3 w-full relative z-10 py-2", children: [_jsx("span", { className: "text-[#F85149]", children: row.price }), _jsx("span", { children: row.size }), _jsx("span", { className: "text-zinc-400", children: row.total })] })] }, idx))) }), _jsx("div", { className: "flex w-full flex-col items-center p-3", children: _jsx("span", { className: "text-zinc-400 text-sm ", children: "Spread: 1 (0.001%)" }) }), _jsx("div", { className: "flex flex-col w-full", children: (() => {
                                                            const bids = [
                                                                { price: "110,589.00", size: 1.799, total: 0.270 },
                                                                { price: "110,589.00", size: 1.799, total: 8.000 },
                                                                { price: "110,589.00", size: 1.799, total: 8.000 },
                                                                { price: "110,588.00", size: 1.755, total: 9.100 },
                                                                { price: "110,587.00", size: 0.351, total: 10.200 },
                                                                { price: "110,586.00", size: 2.952, total: 11.300 },
                                                                { price: "110,585.00", size: 0.172, total: 12.400 },
                                                                { price: "110,584.00", size: 2.474, total: 13.500 },
                                                            ];
                                                            const maxTotal = Math.max(...bids.map(b => b.total));
                                                            return bids.map((row, idx) => {
                                                                const barWidth = `${(row.total / maxTotal) * 100}%`;
                                                                return (_jsxs("div", { className: "relative flex w-full items-center text-sm text-white", children: [_jsx("div", { className: "absolute left-0 top-0 h-full bg-[#22C55E1A]", style: { width: barWidth } }), _jsxs("div", { className: "grid grid-cols-3 w-full relative z-10 py-2", children: [_jsx("span", { className: "text-[#2DA44E]", children: row.price }), _jsx("span", { children: row.size }), _jsx("span", { className: "text-zinc-400", children: row.total })] })] }, idx));
                                                            });
                                                        })() })] }) })), orderBookTab === "Trades" && (_jsxs("div", { className: "flex flex-col items-start w-full", children: [_jsx("div", { className: "flex flex-col items-center py-1 w-full", children: _jsxs("div", { className: "flex items-start pr-[1px] w-full", children: [_jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Price" }), _jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Size" }), _jsx("span", { className: "text-zinc-400 text-sm my-1 w-full", children: "Time" })] }) }), _jsx("div", { className: "flex flex-col w-full", children: [
                                                        { price: "110,584.00", priceColor: "text-[#2DA44E]", qty: "14.35", time: "00:49:51" },
                                                        { price: "110,589.00", priceColor: "text-[#2DA44E]", qty: "0.31", time: "00:49:51" },
                                                        { price: "110,595.00", priceColor: "text-[#F85149]", qty: "0.20", time: "00:49:51" },
                                                        { price: "110,594.00", priceColor: "text-[#F85149]", qty: "1.359", time: "00:49:51" },
                                                        { price: "110,585.00", priceColor: "text-[#2DA44E]", qty: "0.172", time: "00:49:51" },
                                                        { price: "110,593.00", priceColor: "text-[#F85149]", qty: "0.990", time: "00:49:51" },
                                                        { price: "110,588.00", priceColor: "text-[#2DA44E]", qty: "1.755", time: "00:49:51" },
                                                        { price: "110,592.00", priceColor: "text-[#F85149]", qty: "3.025", time: "00:49:51" },
                                                        { price: "110,589.00", priceColor: "text-[#2DA44E]", qty: "1.799", time: "00:49:51" },
                                                        { price: "110,591.00", priceColor: "text-[#F85149]", qty: "1.146", time: "00:49:51" },
                                                        { price: "110,589.00", priceColor: "text-[#2DA44E]", qty: "1.799", time: "00:49:51" },
                                                        { price: "110,590.00", priceColor: "text-[#F85149]", qty: "2.852", time: "00:49:51" },
                                                        { price: "110,587.00", priceColor: "text-[#2DA44E]", qty: "0.351", time: "00:49:51" },
                                                        { price: "110,590.00", priceColor: "text-[#F85149]", qty: "2.852", time: "00:49:51" },
                                                        { price: "110,589.00", priceColor: "text-[#2DA44E]", qty: "1.799", time: "00:49:51" },
                                                        { price: "110,590.00", priceColor: "text-[#F85149]", qty: "2.852", time: "00:49:51" },
                                                        { price: "110,590.00", priceColor: "text-[#F85149]", qty: "2.852", time: "00:49:51" },
                                                        { price: "110,586.00", priceColor: "text-[#2DA44E]", qty: "2.952", time: "00:49:51" },
                                                        { price: "110,590.00", priceColor: "text-[#F85149]", qty: "2.852", time: "00:49:51" },
                                                        { price: "110,589.00", priceColor: "text-[#2DA44E]", qty: "1.799", time: "00:49:51" },
                                                    ].map((row, idx) => (_jsxs("div", { className: "grid grid-cols-3 w-full text-sm py-2", children: [_jsx("span", { className: row.priceColor, children: row.price }), _jsx("span", { className: "text-white", children: row.qty }), _jsx("span", { className: "text-zinc-400", children: row.time })] }, idx))) })] }))] }), _jsxs("div", { className: "flex flex-col gap-2 items-center bg-zinc-900 rounded-sm border border-solid border-[#30363D] w-full ", children: [_jsxs("div", { className: "flex items-start p-3 w-full gap-2", children: [_jsx("button", { className: `flex-1 flex flex-col shrink-0 text-nowrap items-start bg-zinc-950 text-left py-3 px-2 rounded-sm border ${crossSelected ? "border-fuchsia-800" : "border-[#30363D]"} border-solid`, onClick: () => setCrossSelected((v) => !v), children: _jsx("span", { className: "text-[#A6A6B5] text-sm", children: "Cross Margin" }) }), _jsx(Select, { value: leverage, onChange: setLeverage, placeholder: "Leverage", options: [
                                                        { label: "5x", value: "5x" },
                                                        { label: "10x", value: "10x" },
                                                        { label: "20x", value: "20x" },
                                                        { label: "50x", value: "50x" },
                                                        { label: "100x", value: "100x" },
                                                    ] }), _jsx("button", { className: `flex-1 flex flex-col shrink-0 items-start text-nowrap bg-zinc-950 text-left py-3 px-2 rounded-sm border ${aiSelected ? "border-fuchsia-800" : "border-[#30363D]"} border-solid`, onClick: () => setAiSelected((v) => !v), children: _jsx("span", { className: "text-[#A6A6B5] text-sm", children: "AI Trading" }) })] }), _jsx(Tabs, { tabs: ["Market", "Limit", "Advanced"], activeTab: orderPanelTab, onTabChange: setOrderPanelTab }), orderPanelTab === "Market" && (_jsxs("div", { className: "w-full flex flex-col items-start px-4 py-4 gap-4", children: [_jsx("div", { className: "flex items-center bg-zinc-950 py-1 pl-1 pr-[5px] gap-6 rounded-sm w-full", children: _jsxs("div", { className: "flex w-full gap-2", children: [_jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 !== "Sell / Short"
                                                                    ? "bg-[#2DA44E33] text-[#2DA44E]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Buy / Long"), children: _jsx("span", { className: "text-sm", children: "Buy / Long" }) }), _jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 === "Sell / Short"
                                                                    ? "bg-[#EF444433] text-[#F85149]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Sell / Short"), children: _jsx("span", { className: "text-sm", children: "Sell / Short" }) })] }) }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Amount" }) }), _jsxs("div", { className: "flex flex-col items-start gap-4 w-full", children: [_jsxs("div", { className: "flex justify-between bg-zinc-950 py-[9px] px-3 rounded-sm border border-solid border-[#30363D] w-full ", children: [_jsx("input", { placeholder: "0", value: input2, onChange: (e) => {
                                                                                const value = Number(e.target.value.replace(/,/g, ""));
                                                                                onChangeInput2(isNaN(value) ? "" : value.toString());
                                                                            }, className: "text-white bg-transparent text-base w-40 py-[3px] border-0" }), _jsxs("div", { className: "flex shrink-0 items-center bg-zinc-700 py-[7px] pl-2 pr-[7px] gap-1.5 rounded", children: [_jsx("span", { className: "text-zinc-400 text-sm font-bold", children: "USDT" }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/bvauf8h6_expires_30_days.png", className: "w-3 h-[15px] rounded-sm object-fill" })] })] }), _jsx(PercentSlider, { value: percentValue, maxAmount: AMOUNT_TOTAL, onChangeAmount: onChangeInput2 })] })] }), _jsx(ToggleButton, { label: "Reduce Only", value: reduceOnly, onChange: setReduceOnly }), _jsx(ToggleButton, { label: "Take Profit / Stop Loss", value: isOn, onChange: setIsOn }), isOn && (_jsxs("div", { className: "flex flex-col gap-4 py-2 w-full", children: [_jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit Price" }), _jsx("input", { placeholder: "230.00", value: input3, onChange: (e) => onChangeInput3(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input4, onChange: (e) => onChangeInput4(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss Price" }), _jsx("input", { placeholder: "240.00", value: input5, onChange: (e) => onChangeInput5(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input6, onChange: (e) => onChangeInput6(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] })] })), _jsxs("div", { className: "flex flex-col items-start w-full gap-2 ", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-zinc-400 text-sm", children: "Max Slippage %" }) }), _jsx("input", { type: "number", min: 0, max: 100, step: "0.1", placeholder: "0.5", value: input7, onChange: (event) => onChangeInput7(event.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-solid border-[#30363D]" })] }), _jsx(Tips, { title: "AI Insight", iconUrl: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/1uh405kh_expires_30_days.png", tips: [
                                                        "Bullish trend 78% · Resistance $228.50 ·",
                                                        "Suitable for small position entry",
                                                    ] }), _jsxs("div", { className: "flex flex-col items-start pt-4 gap-2 w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm font-bold", children: "Estimation" }), _jsxs("div", { className: "flex flex-col items-start gap-1 w-full", children: [_jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Liquidation Price" }), _jsx("span", { className: "text-white text-sm", children: "$39,130.00" })] }), _jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Est. Fee" }), _jsx("span", { className: "text-white text-sm", children: "$2.50" })] })] })] }), _jsx(PrimaryButton, { size: "large", onClick: () => alert("Pressed!"), children: input1 === "Sell / Short" ? "Sell / Short" : "Buy / Long" })] })), orderPanelTab === "Limit" && (_jsxs("div", { className: "w-full flex flex-col items-start px-4 py-4 gap-4", children: [_jsx("div", { className: "flex items-center bg-zinc-950 py-1 pl-1 pr-[5px] gap-6 rounded-sm w-full", children: _jsxs("div", { className: "flex w-full gap-2", children: [_jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 !== "Sell / Short"
                                                                    ? "bg-[#2DA44E33] text-[#2DA44E]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Buy / Long"), children: _jsx("span", { className: "text-sm", children: "Buy / Long" }) }), _jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 === "Sell / Short"
                                                                    ? "bg-[#EF444433] text-[#F85149]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Sell / Short"), children: _jsx("span", { className: "text-sm", children: "Sell / Short" }) })] }) }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Price (USDC)" }) }), _jsx("input", { type: "number", placeholder: "227.00", value: input3, onChange: (event) => onChangeInput3(event.target.value), className: "text-white bg-[#0D1117] text-base p-3 rounded-md border border-solid border-[#30363D] w-full" })] }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Amount" }) }), _jsxs("div", { className: "flex flex-col items-start gap-4 w-full", children: [_jsxs("div", { className: "flex justify-between bg-zinc-950 py-[9px] px-3 rounded-sm border border-solid border-[#30363D] w-full ", children: [_jsx("input", { placeholder: "0", value: input2, onChange: (e) => {
                                                                                const value = Number(e.target.value.replace(/,/g, ""));
                                                                                onChangeInput2(isNaN(value) ? "" : value.toString());
                                                                            }, className: "text-white bg-transparent text-base w-40 py-[3px] border-0" }), _jsxs("div", { className: "flex shrink-0 items-center bg-zinc-700 py-[7px] pl-2 pr-[7px] gap-1.5 rounded", children: [_jsx("span", { className: "text-zinc-400 text-sm font-bold", children: "USDT" }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/bvauf8h6_expires_30_days.png", className: "w-3 h-[15px] rounded-sm object-fill" })] })] }), _jsxs("div", { className: "flex flex-col w-full", children: [_jsx("input", { type: "range", min: 0, max: 100, step: 1, value: percentValue, onChange: (e) => {
                                                                                const percent = Number(e.target.value);
                                                                                const amount = Math.round((percent / 100) * AMOUNT_TOTAL);
                                                                                onChangeInput2(amount.toString());
                                                                            }, className: "w-full accent-fuchsia-800 h-2 rounded-lg appearance-none bg-zinc-700 my-2" }), _jsx("div", { className: "flex justify-between gap-2 w-full mt-1", children: [0, 25, 50, 75, 100].map((percent) => (_jsxs("button", { type: "button", className: `py-[11px] w-full rounded-sm border ${percentValue === percent
                                                                                    ? "border-2 border-fuchsia-800 font-bold"
                                                                                    : "border border-[#30363D]"} bg-zinc-900 text-white text-sm`, onClick: () => {
                                                                                    const amount = Math.round((percent / 100) * AMOUNT_TOTAL);
                                                                                    onChangeInput2(amount.toString());
                                                                                }, children: [percent, "%"] }, percent))) })] })] })] }), _jsxs("button", { type: "button", className: "py-2 w-full flex items-center  justify-between focus:outline-none", onClick: () => setReduceOnly((prev) => !prev), children: [_jsx("span", { className: "text-[#C9D1D9] text-sm", children: "Reduce Only" }), _jsx("div", { className: `shrink-0 flex items-center transition-colors duration-200 rounded-full ${reduceOnly ? "bg-fuchsia-800" : "bg-zinc-700"} py-0.5 pl-2 pr-0.5`, style: { width: 48, height: 28 }, children: _jsx("div", { className: `bg-white w-5 h-5 rounded-full border border-solid border-white shadow transition-transform duration-200 `, style: {
                                                                    transform: reduceOnly ? "translateX(16px)" : "translateX(0)",
                                                                } }) })] }), _jsxs("button", { type: "button", className: "py-2 flex items-center w-full justify-between focus:outline-none", onClick: () => setIsOn((prev) => !prev), children: [_jsx("span", { className: "text-[#C9D1D9] text-sm", children: "Take Profit / Stop Loss" }), _jsx("div", { className: ` shrink-0 flex items-center transition-colors duration-200 rounded-full ${isOn ? "bg-fuchsia-800" : "bg-zinc-700"} py-0.5 pl-2 pr-0.5`, style: { width: 48, height: 28 }, children: _jsx("div", { className: `bg-white w-5 h-5 rounded-full border border-solid border-white shadow transition-transform duration-200`, style: {
                                                                    transform: isOn ? "translateX(16px)" : "translateX(0)",
                                                                } }) })] }), isOn && (_jsxs("div", { className: "flex flex-col gap-4 py-2 w-full", children: [_jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit Price" }), _jsx("input", { placeholder: "230.00", value: input3, onChange: (e) => onChangeInput3(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input4, onChange: (e) => onChangeInput4(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss Price" }), _jsx("input", { placeholder: "240.00", value: input5, onChange: (e) => onChangeInput5(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input6, onChange: (e) => onChangeInput6(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] })] })), _jsxs("div", { className: "flex items-center gap-2 w-full", children: [_jsxs("div", { className: "flex flex-col items-start w-full gap-2", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px] h-6", children: _jsx("span", { className: "text-zinc-400 text-sm ", children: "Max Slippage %" }) }), _jsx("input", { type: "number", min: 0, max: 100, step: "0.1", placeholder: "0.5", value: input7, onChange: (event) => onChangeInput7(event.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-solid border-[#30363D]" })] }), _jsxs("div", { className: "flex flex-col items-start w-full gap-2", children: [_jsxs("div", { className: "flex items-center pb-[1px] gap-2 h-6", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "TIF" }), _jsxs("div", { className: "relative", children: [_jsx("button", { type: "button", className: "focus:outline-none", onClick: () => setShowTifTooltip((v) => !v), tabIndex: 0, children: _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/32hekqyb_expires_30_days.png", className: "w-3 h-3 object-fill", alt: "TIF Info" }) }), showTifTooltip && (_jsxs("div", { className: "absolute left-1/2 -translate-x-1/2 top-full mt-2 z-50 bg-zinc-900 text-sm text-white rounded px-3 py-2 border border-[#30363D] shadow-lg w-56", children: [_jsx("span", { className: "font-bold", children: "TIF (Time in Force)" }), _jsx("br", {}), _jsx("br", {}), _jsxs("span", { children: ["TIF determines how long an order remains active.", _jsx("br", {}), _jsx("b", { children: "GTC" }), ": Good Till Cancelled", _jsx("br", {}), _jsx("b", { children: "IOC" }), ": Immediate Or Cancel", _jsx("br", {}), _jsx("b", { children: "ALO" }), ": Add Liquidity Only"] })] }))] })] }), _jsxs("div", { className: "relative w-full", children: [_jsxs("select", { className: "appearance-none w-full flex items-center bg-zinc-950 text-left p-3 pr-8 rounded-sm border border-solid border-[#30363D] text-white text-base", value: tif, onChange: e => setTif(e.target.value), children: [_jsx("option", { value: "GTC", children: "GTC" }), _jsx("option", { value: "IOC", children: "IOC" }), _jsx("option", { value: "ALO", children: "ALO" })] }), _jsx("span", { className: "pointer-events-none absolute right-3 top-1/2 -translate-y-1/2", children: _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/w4taczak_expires_30_days.png", className: "w-3 h-[15px] rounded-md object-fill", alt: "Dropdown" }) })] })] })] }), _jsxs("div", { className: "flex flex-col items-start bg-zinc-950 py-3 rounded-lg w-full", children: [_jsxs("div", { className: "flex items-center mb-2 ml-3 gap-2", children: [_jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/1uh405kh_expires_30_days.png", className: "w-3 h-6 object-fill" }), _jsx("span", { className: "text-white text-s text-left", children: "AI Insight" })] }), _jsx("span", { className: "text-[#9D9DAF] text-sm mx-3 text-left", children: "Bullish trend 78% · Resistance $228.50 ·" }), _jsx("span", { className: "text-[#9D9DAF] text-sm ml-3 text-left", children: "Suitable for small position entry" })] }), _jsxs("div", { className: "flex flex-col items-start pt-4 gap-2 w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm font-bold", children: "Estimation" }), _jsxs("div", { className: "flex flex-col items-start gap-1 w-full", children: [_jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Liquidation Price" }), _jsx("span", { className: "text-white text-sm", children: "$39,130.00" })] }), _jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Est. Fee" }), _jsx("span", { className: "text-white text-sm", children: "$2.50" })] })] })] }), _jsx("button", { className: "w-full flex justify-center items-center bg-fuchsia-800 py-3.5 rounded-sm border-0", onClick: () => alert("Pressed!"), children: _jsx("span", { className: "text-white text-base font-bold text-center", children: input1 === "Sell / Short" ? "Sell / Short" : "Buy / Long" }) })] })), orderPanelTab === "Advanced" && (_jsxs("div", { className: "w-full flex flex-col items-start px-4 py-4 gap-4", children: [_jsx("div", { className: "flex items-center bg-zinc-950 py-1 pl-1 pr-[5px] gap-6 rounded-sm w-full", children: _jsxs("div", { className: "flex w-full gap-2", children: [_jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 !== "Sell / Short"
                                                                    ? "bg-[#2DA44E33] text-[#2DA44E]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Buy / Long"), children: _jsx("span", { className: "text-sm", children: "Buy / Long" }) }), _jsx("button", { type: "button", className: `flex-1 flex flex-col items-center py-[11px] px-6 rounded-sm transition-all
                                                    ${input1 === "Sell / Short"
                                                                    ? "bg-[#EF444433] text-[#F85149]"
                                                                    : "bg-transparent text-zinc-400"}`, onClick: () => onChangeInput1("Sell / Short"), children: _jsx("span", { className: "text-sm", children: "Sell / Short" }) })] }) }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop-Loss Type" }) }), _jsxs("button", { className: "flex w-full items-center bg-[#0D1117] text-left p-3 rounded-md border border-solid border-[#30363D]", onClick: () => alert("Pressed!"), children: [_jsx("span", { className: "text-white text-base mr-[123px]", children: "Stop Market" }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/lwwwj2o4_expires_30_days.png", className: "w-3 h-[15px] rounded-md object-fill" })] })] }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Trigger Price (USDC)" }) }), _jsx("input", { type: "number", placeholder: "226.00", value: input8, onChange: (event) => onChangeInput8(event.target.value), className: "w-full text-white bg-[#0D1117] text-base p-3 rounded-md border border-solid border-[#30363D]" })] }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Limit Price" }) }), _jsxs("div", { className: "flex flex-col items-start gap-1 w-full", children: [_jsx("input", { type: "number", placeholder: "225.78", value: input9, onChange: (event) => onChangeInput9(event.target.value), className: "w-full text-white bg-[#0D1117] text-base p-3 rounded-md border border-solid border-[#30363D]" }), _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Limit Rule: Limit = Stop ± 0.1%" })] })] }), _jsxs("div", { className: "flex flex-col items-start gap-2 w-full", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px]", children: _jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Amount" }) }), _jsxs("div", { className: "flex flex-col items-start gap-4 w-full", children: [_jsxs("div", { className: "flex justify-between bg-zinc-950 py-[9px] px-3 rounded-sm border border-solid border-[#30363D] w-full ", children: [_jsx("input", { placeholder: "0", value: input2, onChange: (e) => {
                                                                                const value = Number(e.target.value.replace(/,/g, ""));
                                                                                onChangeInput2(isNaN(value) ? "" : value.toString());
                                                                            }, className: "text-white bg-transparent text-base w-40 py-[3px] border-0" }), _jsxs("div", { className: "flex shrink-0 items-center bg-zinc-700 py-[7px] pl-2 pr-[7px] gap-1.5 rounded", children: [_jsx("span", { className: "text-zinc-400 text-sm font-bold", children: "USDT" }), _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/bvauf8h6_expires_30_days.png", className: "w-3 h-[15px] rounded-sm object-fill" })] })] }), _jsxs("div", { className: "flex flex-col w-full", children: [_jsx("input", { type: "range", min: 0, max: 100, step: 1, value: percentValue, onChange: (e) => {
                                                                                const percent = Number(e.target.value);
                                                                                const amount = Math.round((percent / 100) * AMOUNT_TOTAL);
                                                                                onChangeInput2(amount.toString());
                                                                            }, className: "w-full accent-fuchsia-800 h-2 rounded-lg appearance-none bg-zinc-700 my-2" }), _jsx("div", { className: "flex justify-between gap-2 w-full mt-1", children: [0, 25, 50, 75, 100].map((percent) => (_jsxs("button", { type: "button", className: `py-[11px] w-full rounded-sm border ${percentValue === percent
                                                                                    ? "border-2 border-fuchsia-800 font-bold"
                                                                                    : "border border-[#30363D]"} bg-zinc-900 text-white text-sm`, onClick: () => {
                                                                                    const amount = Math.round((percent / 100) * AMOUNT_TOTAL);
                                                                                    onChangeInput2(amount.toString());
                                                                                }, children: [percent, "%"] }, percent))) })] })] })] }), _jsxs("button", { type: "button", className: "py-2 w-full flex items-center  justify-between focus:outline-none", onClick: () => setReduceOnly((prev) => !prev), children: [_jsx("span", { className: "text-[#C9D1D9] text-sm", children: "Reduce Only" }), _jsx("div", { className: `shrink-0 flex items-center transition-colors duration-200 rounded-full ${reduceOnly ? "bg-fuchsia-800" : "bg-zinc-700"} py-0.5 pl-2 pr-0.5`, style: { width: 48, height: 28 }, children: _jsx("div", { className: `bg-white w-5 h-5 rounded-full border border-solid border-white shadow transition-transform duration-200 `, style: {
                                                                    transform: reduceOnly ? "translateX(16px)" : "translateX(0)",
                                                                } }) })] }), _jsxs("button", { type: "button", className: "py-2 flex items-center w-full justify-between focus:outline-none", onClick: () => setIsOn((prev) => !prev), children: [_jsx("span", { className: "text-[#C9D1D9] text-sm", children: "Take Profit / Stop Loss" }), _jsx("div", { className: ` shrink-0 flex items-center transition-colors duration-200 rounded-full ${isOn ? "bg-fuchsia-800" : "bg-zinc-700"} py-0.5 pl-2 pr-0.5`, style: { width: 48, height: 28 }, children: _jsx("div", { className: `bg-white w-5 h-5 rounded-full border border-solid border-white shadow transition-transform duration-200`, style: {
                                                                    transform: isOn ? "translateX(16px)" : "translateX(0)",
                                                                } }) })] }), isOn && (_jsxs("div", { className: "flex flex-col gap-4 py-2 w-full", children: [_jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit Price" }), _jsx("input", { placeholder: "230.00", value: input3, onChange: (e) => onChangeInput3(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Take Profit %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input4, onChange: (e) => onChangeInput4(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 w-full max-w-2xl", children: [_jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss Price" }), _jsx("input", { placeholder: "240.00", value: input5, onChange: (e) => onChangeInput5(e.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-[#30363D] focus:outline-none" })] }), _jsxs("div", { className: "flex flex-col gap-2 min-w-0 text-left", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "Stop Loss %" }), _jsxs("div", { className: "flex items-center bg-zinc-950 p-3 rounded-sm border border-[#30363D] w-full", children: [_jsx("input", { placeholder: "%", value: input6, onChange: (e) => onChangeInput6(e.target.value), className: "flex-1 text-white bg-transparent text-base font-bold border-0 focus:outline-none min-w-0" }), _jsx("span", { className: "text-white text-base ml-2", children: "%" })] })] })] })] })), _jsxs("div", { className: "flex items-center gap-2 w-full", children: [_jsxs("div", { className: "flex flex-col items-start w-full gap-2", children: [_jsx("div", { className: "flex flex-col items-center pb-[1px] h-6", children: _jsx("span", { className: "text-zinc-400 text-sm ", children: "Max Slippage %" }) }), _jsx("input", { type: "number", min: 0, max: 100, step: "0.1", placeholder: "0.5", value: input7, onChange: (event) => onChangeInput7(event.target.value), className: "w-full text-white bg-zinc-950 text-base p-3 rounded-sm border border-solid border-[#30363D]" })] }), _jsxs("div", { className: "flex flex-col items-start w-full gap-2", children: [_jsxs("div", { className: "flex items-center pb-[1px] gap-2 h-6", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm", children: "TIF" }), _jsxs("div", { className: "relative", children: [_jsx("button", { type: "button", className: "focus:outline-none", onClick: () => setShowTifTooltip((v) => !v), tabIndex: 0, children: _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/32hekqyb_expires_30_days.png", className: "w-3 h-3 object-fill", alt: "TIF Info" }) }), showTifTooltip && (_jsxs("div", { className: "absolute left-1/2 -translate-x-1/2 top-full mt-2 z-50 bg-zinc-900 text-sm text-white rounded px-3 py-2 border border-[#30363D] shadow-lg w-56", children: [_jsx("span", { className: "font-bold", children: "TIF (Time in Force)" }), _jsx("br", {}), _jsx("br", {}), _jsxs("span", { children: ["TIF determines how long an order remains active.", _jsx("br", {}), _jsx("b", { children: "GTC" }), ": Good Till Cancelled", _jsx("br", {}), _jsx("b", { children: "IOC" }), ": Immediate Or Cancel", _jsx("br", {}), _jsx("b", { children: "ALO" }), ": Add Liquidity Only"] })] }))] })] }), _jsxs("div", { className: "relative w-full", children: [_jsxs("select", { className: "appearance-none w-full flex items-center bg-zinc-950 text-left p-3 pr-8 rounded-sm border border-solid border-[#30363D] text-white text-base", value: tif, onChange: e => setTif(e.target.value), children: [_jsx("option", { value: "GTC", children: "GTC" }), _jsx("option", { value: "IOC", children: "IOC" }), _jsx("option", { value: "ALO", children: "ALO" })] }), _jsx("span", { className: "pointer-events-none absolute right-3 top-1/2 -translate-y-1/2", children: _jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/w4taczak_expires_30_days.png", className: "w-3 h-[15px] rounded-md object-fill", alt: "Dropdown" }) })] })] })] }), _jsxs("div", { className: "flex flex-col items-start bg-zinc-950 py-3 rounded-lg w-full", children: [_jsxs("div", { className: "flex items-center mb-2 ml-3 gap-2", children: [_jsx("img", { src: "https://storage.googleapis.com/tagjs-prod.appspot.com/v1/ZlYhP85oka/1uh405kh_expires_30_days.png", className: "w-3 h-6 object-fill" }), _jsx("span", { className: "text-white text-s text-left", children: "AI Insight" })] }), _jsx("span", { className: "text-[#9D9DAF] text-sm mx-3 text-left", children: "Bullish trend 78% · Resistance $228.50 ·" }), _jsx("span", { className: "text-[#9D9DAF] text-sm ml-3 text-left", children: "Suitable for small position entry" })] }), _jsxs("div", { className: "flex flex-col items-start pt-4 gap-2 w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm font-bold", children: "Estimation" }), _jsxs("div", { className: "flex flex-col items-start gap-1 w-full", children: [_jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Liquidation Price" }), _jsx("span", { className: "text-white text-sm", children: "$39,130.00" })] }), _jsxs("div", { className: "flex justify-between items-center w-full", children: [_jsx("span", { className: "text-[#9D9DAF] text-sm ", children: "Est. Fee" }), _jsx("span", { className: "text-white text-sm", children: "$2.50" })] })] })] }), _jsx("button", { className: "w-full flex justify-center items-center bg-fuchsia-800 py-3.5 rounded-sm border-0", onClick: () => alert("Pressed!"), children: _jsx("span", { className: "text-white text-base font-bold text-center", children: input1 === "Sell / Short" ? "Sell / Short" : "Buy / Long" }) })] }))] })] })] }), _jsx(Footer, {})] }) }));
};
